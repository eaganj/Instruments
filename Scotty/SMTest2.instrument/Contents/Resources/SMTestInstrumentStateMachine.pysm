# Scotty -- a meta-toolkit for runtime toolkit overloading
#
# Copyright 2009-2011, Universit√© Paris-Sud
# by James R. Eagan (code at my last name dot me)
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# and GNU Lesser General Public License along with this program.  
# If not, see <http://www.gnu.org/licenses/>.

from StateMachines import *
from IIKit import *

class SMTestInstrumentStateMachine(statemachine):
    colors = [NSColor.redColor(), NSColor.blueColor(), NSColor.greenColor()]
    colorIndex = -1
    
    def __init__(self, instrument):
        super(SMTestInstrumentStateMachine, self).__init__()
        self._instrument = instrument
    
    State start:
        Transition press(self, LeftMouseDown) >> self.drawing:
            self.colorIndex = (self.colorIndex + 1) % len(self.colors)
            color = self.colors[self.colorIndex]
            self._instrument.addPath(event.window(), color)
    
    State drawing:
        Transition release(self, LeftMouseUp) >> self.start:
            pass
        
        Transition move(self, LeftMouseDragged):
            self._instrument.addDrawPoint(event.locationInWindow(), event.window())
    